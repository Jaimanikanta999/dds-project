#include <stdio.h>
#include <string.h>

#define MAX 100

struct Student 
{
    int roll;
    char name[50];
    float marks;U
};

void inputStudents(struct Student s[], int n) {
    for (int i = 0; i < n; i++) {
        s[i].roll = i + 1;
        printf("Enter name of student %d: ", i + 1);
        scanf("%s", s[i].name);
        printf("Enter marks of %s: ", s[i].name);
        scanf("%f", &s[i].marks);
    }
}

void bubbleSort(struct Student s[], int n) {
    struct Student temp;
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - 1 - i; j++) {
            if (s[j].marks > s[j + 1].marks) {
                temp = s[j];
                s[j] = s[j + 1];
                s[j + 1] = temp;
            }
        }
    }
}

void displayStudents(struct Student s[], int n) {
    printf("\nRoll\tName\tMarks\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%s\t%.2f\n", s[i].roll, s[i].name, s[i].marks);
    }
}

int binarySearchByRoll(struct Student s[], int n, int roll) {
    int low = 0, high = n - 1, mid;
    while (low <= high) {
        mid = (low + high) / 2;
        if (s[mid].roll == roll)
            return mid;
        else if (s[mid].roll < roll)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return -1;
}

int searchByName(struct Student s[], int n, char name[]) {
    for (int i = 0; i < n; i++) {

        if (strcmp(s[i].name, name) == 0)
            return i;
    }
    return -1;
}

int main() {
    struct Student s[MAX];
    int n, choice, roll, index;
    char name[50];

    printf("Enter number of students: ");
    scanf("%d", &n);

    inputStudents(s, n);

    printf("\nSorting students by marks (Bubble Sort)...\n");
    bubbleSort(s, n);
    displayStudents(s, n);

    while (1) {
        printf("\nSearch Menu:\n");
        printf("1. Search by Roll Number\n");
        printf("2. Search by Name\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter roll number to search: ");
                scanf("%d", &roll);
                index = binarySearchByRoll(s, n, roll);
                if (index != -1)
                    printf("Found: %d\t%s\t%.2f\n", s[index].roll, s[index].name, s[index].marks);
                else
                    printf("Student with roll %d not found!\n", roll);
                break;
            case 2:
                printf("Enter name to search: ");
                scanf("%s", name);
                index = searchByName(s, n, name);
                if (index != -1)
                    printf("Found: %d\t%s\t%.2f\n", s[index].roll, s[index].name, s[index].marks);
                else
                    printf("Student named %s not found!\n", name);
                break;
            case 3:
                return 0;

            default:
                printf("Invalid choice!\n");
        }
    }
    return 0;
}
